<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.MemberMapper">
  <resultMap id="BaseResultMap" type="entity.Member">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="acount" jdbcType="VARCHAR" property="acount" />
    <result column="roleID" jdbcType="INTEGER" property="roleID" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="nickName" jdbcType="VARCHAR" property="nickName" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="birth" jdbcType="TIMESTAMP" property="birth" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="latitude" jdbcType="DOUBLE" property="latitude" />
    <result column="longitude" jdbcType="DOUBLE" property="longitude" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="blog" jdbcType="VARCHAR" property="blog" />
    <result column="is_lock" jdbcType="INTEGER" property="is_lock" />
    <result column="auditState" jdbcType="INTEGER" property="auditState" />
    <result column="registTime" jdbcType="TIMESTAMP" property="registTime" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="lastLoginTime" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="loginFailNumber" jdbcType="INTEGER" property="loginFailNumber" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="introduce" jdbcType="VARCHAR" property="introduce" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="language" jdbcType="VARCHAR" property="language" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, acount, roleID, name, nickName, gender, birth, country, city, address, latitude, 
    longitude, telephone, email, idcard, blog, is_lock, auditState, registTime, level, 
    lastLoginTime, loginFailNumber, salt, password, introduce, remark, language
  </sql>
  <select id="selectByExample" parameterType="entity.MemberExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from member
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from member
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="entity.MemberExample">
    delete from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="entity.Member">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into member (acount, roleID, name, 
      nickName, gender, birth, 
      country, city, address, 
      latitude, longitude, telephone, 
      email, idcard, blog, 
      is_lock, auditState, registTime, 
      level, lastLoginTime, loginFailNumber, 
      salt, password, introduce, 
      remark, language)
    values (#{acount,jdbcType=VARCHAR}, #{roleID,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, #{birth,jdbcType=TIMESTAMP}, 
      #{country,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{latitude,jdbcType=DOUBLE}, #{longitude,jdbcType=DOUBLE}, #{telephone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{blog,jdbcType=VARCHAR}, 
      #{is_lock,jdbcType=INTEGER}, #{auditState,jdbcType=INTEGER}, #{registTime,jdbcType=TIMESTAMP}, 
      #{level,jdbcType=INTEGER}, #{lastLoginTime,jdbcType=TIMESTAMP}, #{loginFailNumber,jdbcType=INTEGER}, 
      #{salt,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{introduce,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{language,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="entity.Member">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="acount != null">
        acount,
      </if>
      <if test="roleID != null">
        roleID,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="nickName != null">
        nickName,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birth != null">
        birth,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="blog != null">
        blog,
      </if>
      <if test="is_lock != null">
        is_lock,
      </if>
      <if test="auditState != null">
        auditState,
      </if>
      <if test="registTime != null">
        registTime,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="lastLoginTime != null">
        lastLoginTime,
      </if>
      <if test="loginFailNumber != null">
        loginFailNumber,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="introduce != null">
        introduce,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="language != null">
        language,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="acount != null">
        #{acount,jdbcType=VARCHAR},
      </if>
      <if test="roleID != null">
        #{roleID,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="birth != null">
        #{birth,jdbcType=TIMESTAMP},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="blog != null">
        #{blog,jdbcType=VARCHAR},
      </if>
      <if test="is_lock != null">
        #{is_lock,jdbcType=INTEGER},
      </if>
      <if test="auditState != null">
        #{auditState,jdbcType=INTEGER},
      </if>
      <if test="registTime != null">
        #{registTime,jdbcType=TIMESTAMP},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginFailNumber != null">
        #{loginFailNumber,jdbcType=INTEGER},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="language != null">
        #{language,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entity.MemberExample" resultType="java.lang.Long">
    select count(*) from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update member
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.acount != null">
        acount = #{record.acount,jdbcType=VARCHAR},
      </if>
      <if test="record.roleID != null">
        roleID = #{record.roleID,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null">
        nickName = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.birth != null">
        birth = #{record.birth,jdbcType=TIMESTAMP},
      </if>
      <if test="record.country != null">
        country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=DOUBLE},
      </if>
      <if test="record.longitude != null">
        longitude = #{record.longitude,jdbcType=DOUBLE},
      </if>
      <if test="record.telephone != null">
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.blog != null">
        blog = #{record.blog,jdbcType=VARCHAR},
      </if>
      <if test="record.is_lock != null">
        is_lock = #{record.is_lock,jdbcType=INTEGER},
      </if>
      <if test="record.auditState != null">
        auditState = #{record.auditState,jdbcType=INTEGER},
      </if>
      <if test="record.registTime != null">
        registTime = #{record.registTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.lastLoginTime != null">
        lastLoginTime = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginFailNumber != null">
        loginFailNumber = #{record.loginFailNumber,jdbcType=INTEGER},
      </if>
      <if test="record.salt != null">
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.introduce != null">
        introduce = #{record.introduce,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.language != null">
        language = #{record.language,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update member
    set id = #{record.id,jdbcType=INTEGER},
      acount = #{record.acount,jdbcType=VARCHAR},
      roleID = #{record.roleID,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      nickName = #{record.nickName,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=INTEGER},
      birth = #{record.birth,jdbcType=TIMESTAMP},
      country = #{record.country,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      latitude = #{record.latitude,jdbcType=DOUBLE},
      longitude = #{record.longitude,jdbcType=DOUBLE},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      blog = #{record.blog,jdbcType=VARCHAR},
      is_lock = #{record.is_lock,jdbcType=INTEGER},
      auditState = #{record.auditState,jdbcType=INTEGER},
      registTime = #{record.registTime,jdbcType=TIMESTAMP},
      level = #{record.level,jdbcType=INTEGER},
      lastLoginTime = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      loginFailNumber = #{record.loginFailNumber,jdbcType=INTEGER},
      salt = #{record.salt,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      introduce = #{record.introduce,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      language = #{record.language,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="entity.Member">
    update member
    <set>
      <if test="acount != null">
        acount = #{acount,jdbcType=VARCHAR},
      </if>
      <if test="roleID != null">
        roleID = #{roleID,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nickName = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="birth != null">
        birth = #{birth,jdbcType=TIMESTAMP},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="blog != null">
        blog = #{blog,jdbcType=VARCHAR},
      </if>
      <if test="is_lock != null">
        is_lock = #{is_lock,jdbcType=INTEGER},
      </if>
      <if test="auditState != null">
        auditState = #{auditState,jdbcType=INTEGER},
      </if>
      <if test="registTime != null">
        registTime = #{registTime,jdbcType=TIMESTAMP},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="lastLoginTime != null">
        lastLoginTime = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginFailNumber != null">
        loginFailNumber = #{loginFailNumber,jdbcType=INTEGER},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="language != null">
        language = #{language,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.Member">
    update member
    set acount = #{acount,jdbcType=VARCHAR},
      roleID = #{roleID,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      nickName = #{nickName,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      birth = #{birth,jdbcType=TIMESTAMP},
      country = #{country,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      latitude = #{latitude,jdbcType=DOUBLE},
      longitude = #{longitude,jdbcType=DOUBLE},
      telephone = #{telephone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      blog = #{blog,jdbcType=VARCHAR},
      is_lock = #{is_lock,jdbcType=INTEGER},
      auditState = #{auditState,jdbcType=INTEGER},
      registTime = #{registTime,jdbcType=TIMESTAMP},
      level = #{level,jdbcType=INTEGER},
      lastLoginTime = #{lastLoginTime,jdbcType=TIMESTAMP},
      loginFailNumber = #{loginFailNumber,jdbcType=INTEGER},
      salt = #{salt,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      language = #{language,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>